'Venv(виртуальное окружнение) - это какое ьо изолированное пространство для установки туда библиотеки либо пакетов'
'Устанавливать бтблеотеки, пакеты на компьютер не желательно .Могут возникнуть конфликты'

# 'Pip, poetry(установщик пакетов,библеотек)- при помощи этих инструментов можно устанавливать библеотеки и пакеты.
# # Poetry удобнее и новее,так же поддерживает виртуальное окружение из под капота'


# '======================Команды Poetry======================'
# # poetry init - команда , которая инициализирует вашу директорию где вы кодите, как проект.
# Создается файл pyproject. toml с информацией о вашем проекте: название проекта, автор проекта и.т.д,
# так же там есть информация об установленных библеотеках

# poetry shell - создает виртуальное окружение и сразу же активирует его

# exit, deactivate - деактивация виртуального окружения

# poetry add name - устанавливает билбеотеки name. Так же создается файл - poetry.lock, в этом файле у вас содержитсч
# информация о всех установленных библеотеках

'========================Команда pip и venv====================='

# pip install name - это команда для установки библиеки name

# python3 - m venv venv_name - создаст виртуальное окружение с название venv_name
# . venv/bin/activate - акти0вация виртуального окружения 
# deactivate - деактивация виртуального окружения
# Чтобы отслеживать установленные библиотеки можно использовать команду pip freeze
# # В командной разработке для того чтобы другой разработчик понимал какие библиотеки у вас установлены, 
# создается вручную файл requirements.txt,далее командной pip freeze > requirements.txt в этот файл записываются
# установленные библиотеки

def add_one(a):
    return a

def division(a, b):
    return a / b

def is_palindrom(text):
    if text.lower() == text.lower()[::-1]:
        return True
    return False



